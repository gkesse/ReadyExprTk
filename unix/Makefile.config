GRLIB = /cygdrive/c/Users/Admin/Downloads/Programs/ReadyLib/dev
GSRC = ../code/GProject/src
GBIN = bin
GLIB = lib
GBUILD = build
GTARGET = $(GBIN)/gp_exprtk
GTARGET_LIB = $(GLIB)/libexprtk.dll

GINCS = \
    -I$(GSRC)/include \
    -I$(GRLIB)/exprtk/1.0.0/mingw/include \

GLIBS = \
    -Llib -lexprtk
    
GOBJS = \
    $(patsubst $(GSRC)/%.cpp, $(GBUILD)/%.o, $(wildcard $(GSRC)/*.cpp)) \

GOBJS_LIB = \
    $(patsubst $(GSRC)/manager/%.cpp, $(GBUILD)/%.o, $(wildcard $(GSRC)/manager/*.cpp)) \

GCFLAGS = \
    -std=gnu++11 \
    
GCFLAGS_LIB = \
    -std=gnu++11 \
    -Wa,-mbig-obj \
    -DDLL_APP \
    
all: compile run

lib: $(GOBJS_LIB)
	@if ! [ -d $(GLIB) ] ; then mkdir -p $(GLIB) ; fi
	g++ -shared -o $(GTARGET_LIB) $(GOBJS_LIB)
compile: $(GOBJS)
	@if ! [ -d $(GBIN) ] ; then mkdir -p $(GBIN) ; fi
	g++ -o $(GTARGET) $(GOBJS) $(GLIBS) 
$(GBUILD)/%.o: $(GSRC)/%.cpp
	@if ! [ -d $(GBUILD) ] ; then mkdir -p $(GBUILD) ; fi
	g++ $(GCFLAGS) -c $< -o $@ $(GINCS)
$(GBUILD)/%.o: $(GSRC)/manager/%.cpp
	@if ! [ -d $(GBUILD) ] ; then mkdir -p $(GBUILD) ; fi
	g++ $(GCFLAGS_LIB) -c $< -o $@ $(GINCS)
run:
	@echo
	$(GTARGET)
clean: 
	rm -f $(GBUILD)/*.o $(GTARGET)
